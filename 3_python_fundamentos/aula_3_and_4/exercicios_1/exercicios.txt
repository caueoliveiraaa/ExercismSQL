# Exercícios:
        1 - Classe Conta Bancária:
        Crie uma classe chamada ContaBancaria que simule uma conta bancária simples.
        A classe deve ter os atributos titular, saldo e numero. Crie métodos para depositar (depositar(valor))
        e sacar (sacar(valor)) dinheiro da conta, além de um método para exibir o saldo atual (exibir_saldo()).

        2 - Classe Livro:
        Crie uma classe chamada Livro que represente um livro.
        A classe deve ter os atributos titulo, autor e ano. Crie um método para exibir as informações do livro (exibir_informacoes()).

        3 - Classe Carro:
        Crie uma classe chamada Carro que simule um carro. A classe deve ter os atributos marca, modelo e ano.
        Crie métodos para ligar (ligar()), desligar (desligar()) e exibir as informações do carro (exibir_informacoes()).

        4 - Classe Agenda:
        Crie uma classe chamada Agenda que represente uma agenda de contatos. A classe deve ter um atributo para armazenar uma lista de contatos.
        Crie métodos para adicionar (adicionar_contato(nome, telefone)), remover (remover_contato(nome)), e exibir todos os contatos (exibir_contatos()).

        5 - Classe Triângulo:
        Crie uma classe chamada Triangulo que represente um triângulo. A classe deve ter os atributos lado1, lado2 e lado3.
        Crie métodos para verificar se os lados formam um triângulo válido (eh_valido()), calcular o perímetro (calcular_perimetro())
        e exibir o tipo do triângulo com base nos lados (tipo_triangulo()).

        6 - Classe Aluno:
        Crie uma classe chamada Aluno que represente um aluno. A classe deve ter os atributos nome, matricula e notas (uma lista de notas).
        Crie métodos para calcular a média (calcular_media()) e exibir o status do aluno com base na média (exibir_status()).

        7 - Classe Banco:
        Crie uma classe chamada Banco que represente um banco. A classe deve ter atributos para armazenar uma lista de contas bancárias.
        Crie métodos para adicionar (criar_conta(titular, saldo_inicial)), remover (encerrar_conta(numero)), exibir o total de saldo de todas as contas (total_saldo()).
